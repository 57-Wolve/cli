# This is an example .goreleaser.yml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
project_name: step-ca

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod download

builds:
  -
    id: step-ca
    env:
      - CGO_ENABLED=0
    targets:
      - darwin_amd64
      - darwin_arm64
      - freebsd_amd64
      - linux_386
      - linux_amd64
      - linux_arm64
      - linux_arm_5
      - linux_arm_6
      - linux_arm_7
      - windows_amd64
    flags:
      - -trimpath
    main: ./cmd/step-ca/main.go
    binary: bin/step-ca
    ldflags:
      - -w -X main.Version={{.Version}} -X main.BuildTime={{.Date}}

archives:
  -
    # Can be used to change the archive formats for specific GOOSs.
    # Most common use case is to archive as zip on Windows.
    # Default is empty.
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Version }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    format_overrides:
      - goos: windows
        format: zip
    wrap_in_directory: "{{ .ProjectName }}_{{ .Version }}"
    files:
      - README.md
      - LICENSE

source:
  enabled: true
  name_template: '{{ .ProjectName }}_{{ .Version }}'

checksum:
  name_template: 'checksums.txt'
  extra_files:
    - glob: ./.releases/*

#signs:
#- cmd: cosign
#  stdin: '{{ .Env.COSIGN_PWD }}'
#  args: ["sign-blob", "-key=/tmp/cosign.key", "-output=${signature}", "${artifact}"]
#  artifacts: all

snapshot:
  name_template: "{{ .Tag }}-next"

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # Note: it can only be one: either github, gitlab or gitea
  github:
    owner: 57-Wolve
    name: certificates
  draft: false
scoop:
  url_template: "https://github.com/57-Wolve/certificates/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  # Git author used to commit to the repository.
  # Defaults are shown.
  commit_author:
    name: 57-wolve
    email: william.gill@anomalous.dev